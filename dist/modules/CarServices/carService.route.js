"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CarServiceRoutes = void 0;
const express_1 = __importDefault(require("express"));
const validateRequest_1 = __importDefault(require("../../middlewares/validateRequest"));
const carService_validation_1 = require("./carService.validation");
const carService_controllers_1 = require("./carService.controllers");
const slots_validation_1 = require("../Slots/slots.validation");
const auth_1 = __importDefault(require("../../middlewares/auth"));
const auth_constant_1 = require("../Auth/auth.constant");
const router = express_1.default.Router();
router.post('/', (0, auth_1.default)(auth_constant_1.USER_ROLE.admin), (0, validateRequest_1.default)(carService_validation_1.carServiceValidations.createCarServiceValidationSchema), carService_controllers_1.carServiceControllers.createCarService);
router.post('/slots', (0, auth_1.default)(auth_constant_1.USER_ROLE.admin), (0, validateRequest_1.default)(slots_validation_1.slotAppointmentValidation.createSlotAppointmentValidationSchema), carService_controllers_1.carServiceControllers.createSlotAppointment);
router.get('/:id', carService_controllers_1.carServiceControllers.getSingleService);
router.put('/:id', (0, auth_1.default)(auth_constant_1.USER_ROLE.admin), (0, validateRequest_1.default)(carService_validation_1.carServiceValidations.updateCarServiceValidationSchema), carService_controllers_1.carServiceControllers.updateService);
router.delete('/:id', (0, auth_1.default)(auth_constant_1.USER_ROLE.admin), carService_controllers_1.carServiceControllers.deleteService);
router.get('/', carService_controllers_1.carServiceControllers.getAllServices);
exports.CarServiceRoutes = router;
